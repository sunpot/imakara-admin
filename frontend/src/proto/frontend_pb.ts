// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file proto/frontend.proto (package imakara_admin_frontend, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message imakara_admin_frontend.ListStreamersRequest
 */
export class ListStreamersRequest extends Message<ListStreamersRequest> {
  constructor(data?: PartialMessage<ListStreamersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "imakara_admin_frontend.ListStreamersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStreamersRequest {
    return new ListStreamersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStreamersRequest {
    return new ListStreamersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStreamersRequest {
    return new ListStreamersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListStreamersRequest | PlainMessage<ListStreamersRequest> | undefined, b: ListStreamersRequest | PlainMessage<ListStreamersRequest> | undefined): boolean {
    return proto3.util.equals(ListStreamersRequest, a, b);
  }
}

/**
 * @generated from message imakara_admin_frontend.ListStreamersResponse
 */
export class ListStreamersResponse extends Message<ListStreamersResponse> {
  /**
   * @generated from field: repeated string streamers = 1;
   */
  streamers: string[] = [];

  constructor(data?: PartialMessage<ListStreamersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "imakara_admin_frontend.ListStreamersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "streamers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStreamersResponse {
    return new ListStreamersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStreamersResponse {
    return new ListStreamersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStreamersResponse {
    return new ListStreamersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListStreamersResponse | PlainMessage<ListStreamersResponse> | undefined, b: ListStreamersResponse | PlainMessage<ListStreamersResponse> | undefined): boolean {
    return proto3.util.equals(ListStreamersResponse, a, b);
  }
}

